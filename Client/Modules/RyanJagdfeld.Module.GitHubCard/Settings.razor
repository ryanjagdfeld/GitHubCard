@namespace RyanJagdfeld.Module.GitHubCard
@inherits ModuleBase
@inject ISettingService SettingService
@inject IStringLocalizer<Settings> Localizer

<div class="container">
    <div class="row mb-1 align-items-center">
        <Label Class="col-sm-3" For="columnClasses" HelpText="Bootstrap classes for each column in the grid. NOTE: The card width can outgrow the box of the grid." ResourceKey="ColumnClass" ResourceType="@resourceType">Column CSS Class: </Label>
        <div class="col-sm-9">
            <input id="columnClasses" type="text" class="form-control" @bind="@_columnClasses" />
        </div>
    </div>
</div>

@code {
    private string resourceType = "RyanJagdfeld.Module.GitHubCard.Settings, RyanJagdfeld.Module.GitHubCard.Client.Oqtane"; // for localization
    public override string Title => "GitHubCard Settings";

    string _columnClasses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Dictionary<string, string> settings = await SettingService.GetModuleSettingsAsync(ModuleState.ModuleId);
            _columnClasses = SettingService.GetSetting(settings, "ColumnClasses", "col-xl-4 col-lg-6 col-12");
        }
        catch (Exception ex)
        {
            AddModuleMessage(ex.Message, MessageType.Error);
        }
    }

    public async Task UpdateSettings()
    {
        try
        {
            Dictionary<string, string> settings = await SettingService.GetModuleSettingsAsync(ModuleState.ModuleId);
            SettingService.SetSetting(settings, "ColumnClasses", _columnClasses);
            await SettingService.UpdateModuleSettingsAsync(settings, ModuleState.ModuleId);
        }
        catch (Exception ex)
        {
            AddModuleMessage(ex.Message, MessageType.Error);
        }
    }
}
